# Generated by Django 4.1.5 on 2023-04-10 02:22

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Device Brand',
                'verbose_name_plural': 'Device Brands',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True, verbose_name='Username')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=14, unique=True, verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District Of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, null=True, verbose_name='State')),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='Zip Code')),
                ('service_provider', models.CharField(choices=[('N/A', 'n/a'), ('At&t', 'at&t'), ('T-mobile', 't-mobile'), ('Verizon', 'verizon'), ('Metro', 'metro'), ('Cricket', 'cricket'), ('Simple Mobile', 'simple mobile'), ('H20', 'h20'), ('Lyca Mobile', 'lyca mobile'), ('Ultra Mobile', 'ultra mobile'), ('Net 10', 'net 10'), ('Straight Talk', 'straight talk'), ('Tracfone', 'tracfone'), ('Boost Mobile', 'boost mobile'), ('Virgin Mobile', 'virgin mobile'), ('Sprint', 'sprint'), ('Unlocked', 'unlocked'), ('Other', 'other'), ('Unknown', 'unknown'), ('آخر', 'آخر')], default='Unknown', max_length=50, verbose_name='Service Provider')),
                ('accept_devices_trade_in', models.BooleanField(default=True, verbose_name='Accept Trade-ins')),
                ('accept_devices_buy', models.BooleanField(default=True, verbose_name='Buy Devices')),
                ('accept_devices_sell', models.BooleanField(default=True, verbose_name='Sell Devices')),
                ('accept_device_repair', models.BooleanField(default=True, verbose_name='Repair Devices')),
                ('accept_sell', models.BooleanField(default=True, verbose_name='Accept Sales')),
                ('blacklisted', models.BooleanField(default=False, verbose_name='Blacklisted')),
                ('blacklisted_reason', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Blacklisted Reason')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='customer_photos', verbose_name='Customer Photo')),
                ('notes', models.TextField(blank=True, max_length=500, null=True, verbose_name='Notes')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='Biography')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('taxable', models.CharField(choices=[('Yes', 'yes'), ('No', 'no')], default='yes', max_length=3)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='DeviceColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Device Color',
                'verbose_name_plural': 'Device Colors',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='DeviceDefect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_name', models.CharField(max_length=50, unique=True)),
                ('defect_description', models.TextField(blank=True, max_length=500, null=True)),
                ('defect_solution', models.TextField(default='Unknown', max_length=500)),
            ],
            options={
                'verbose_name': 'Device Defect',
                'verbose_name_plural': 'Device Defects',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Labor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labor_name', models.CharField(max_length=200)),
                ('labor_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('labor_description', models.TextField(blank=True, null=True)),
                ('labor_risk', models.CharField(choices=[('Minimal', 'minimal'), ('very low', 'very low'), ('Low', 'low'), ('Medium', 'medium'), ('High', 'high'), ('Very High', 'very high'), ('Too High', 'too high')], default='low', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(default='Unknown', max_length=200)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_name', models.CharField(default='Unknown', max_length=200)),
                ('phone', models.CharField(default='Unknown', max_length=200)),
                ('email', models.CharField(default='Unknown', max_length=200)),
                ('address', models.CharField(default='Unknown', max_length=200)),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_order_status', models.CharField(choices=[('Pending', 'pending'), ('In Progress', 'in progress'), ('Completed', 'completed'), ('Back Ordered', 'back ordered'), ('Beyond Repair', 'beyond repair'), ('Cannot be Repaired', 'cannot be repaired'), ('Cancelled', 'cancelled'), ('Rejected', 'rejected'), ('Unknown', 'unknown'), ('آخر', 'آخر')], default='pending', max_length=25)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order_created_date', models.DateTimeField(auto_now_add=True)),
                ('order_updated_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_order_Customer', to='store.customer')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_order_employee', to=settings.AUTH_USER_MODEL)),
                ('order_created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_order_created_by', to=settings.AUTH_USER_MODEL)),
                ('order_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_order_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Work Order',
                'verbose_name_plural': 'Work Orders',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.category')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('discount', models.IntegerField(default=0)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ordered', models.BooleanField(default=False)),
                ('cashier', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart_cashier', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart_customer', to=settings.AUTH_USER_MODEL)),
                ('shopping_cart_created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart_created_by', to=settings.AUTH_USER_MODEL)),
                ('shopping_cart_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shopping Cart',
                'verbose_name_plural': 'Shopping Carts',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, default=999.99, max_digits=12)),
                ('onhand_quantity', models.IntegerField(default=0)),
                ('min_stock_threshold', models.IntegerField(default=0)),
                ('max_stock_threshold', models.IntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('views_count', models.IntegerField(default=0)),
                ('added_to_cart_count', models.IntegerField(default=0)),
                ('sale_start', models.DateTimeField(blank=True, default=None, null=True)),
                ('sale_end', models.DateTimeField(blank=True, default=None, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('photo', models.ImageField(blank=True, default=None, null=True, upload_to='static/images/store/products')),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('ms_url', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.category')),
                ('department', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='department', to='store.department')),
                ('location', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='location', to='store.location')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manufacturer', to='store.manufacturer')),
                ('product_created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_created_by', to=settings.AUTH_USER_MODEL)),
                ('product_updated_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_updated_by', to=settings.AUTH_USER_MODEL)),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.subcategory')),
                ('tags', models.ManyToManyField(blank=True, to='store.tag')),
                ('vendor', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='store.vendor')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_series', models.CharField(default='N/A', max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.brand')),
            ],
            options={
                'verbose_name': 'Device Model',
                'verbose_name_plural': 'Device Models',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrier', models.CharField(choices=[('N/A', 'n/a'), ('At&t', 'at&t'), ('T-mobile', 't-mobile'), ('Verizon', 'verizon'), ('Metro', 'metro'), ('Cricket', 'cricket'), ('Simple Mobile', 'simple mobile'), ('H20', 'h20'), ('Lyca Mobile', 'lyca mobile'), ('Ultra Mobile', 'ultra mobile'), ('Net 10', 'net 10'), ('Straight Talk', 'straight talk'), ('Tracfone', 'tracfone'), ('Boost Mobile', 'boost mobile'), ('Virgin Mobile', 'virgin mobile'), ('Sprint', 'sprint'), ('Unlocked', 'unlocked'), ('Other', 'other'), ('Unknown', 'unknown'), ('آخر', 'آخر')], default='unknown', max_length=25)),
                ('imei', models.CharField(blank=True, max_length=200, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=200, null=True)),
                ('compatibility', models.CharField(choices=[('GSM', 'gsm'), ('CDMA', 'cdma'), ('GSM/CDMA', 'gsm/cdma'), ('Other', 'other'), ('Unknown', 'unknown'), ('آخر', 'آخر'), ('N/A', 'n/a')], default='unknown', max_length=25)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('purchase_date', models.DateField(default=datetime.datetime.now)),
                ('device_created_date', models.DateTimeField(auto_now_add=True)),
                ('device_updated_date', models.DateTimeField(auto_now_add=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='static/reports/device_reports/')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='static/images/device_photos/')),
                ('status', models.CharField(choices=[('New', 'new'), ('Used', 'used'), ('Refurbished', 'refurbished'), ('Repaired', 'repaired'), ('Available', 'available'), ('Unavailable', 'unavailable'), ('Reserved', 'reserved'), ('Recycled', 'recycled'), ('Unknown', 'unknown'), ('آخر', 'آخر')], default='unknown', max_length=25)),
                ('grade', models.CharField(choices=[('A', 'a'), ('B', 'b'), ('C', 'c'), ('D', 'd'), ('Unknown', 'unknown')], default='unknown', max_length=25)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.devicecolor')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_department', to='store.department')),
                ('device_created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_created_by', to=settings.AUTH_USER_MODEL)),
                ('device_defects', models.ManyToManyField(default=None, help_text='Select all that apply', related_name='device_defects', to='store.devicedefect')),
                ('device_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.devicemodel')),
                ('device_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_updated_by', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='store.location')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_owner', to='store.customer')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_seller', to='store.customer')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_vendor', to='store.vendor')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('shopping_cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='store.shoppingcart')),
            ],
        ),
        migrations.AddField(
            model_name='brand',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.manufacturer'),
        ),
    ]
